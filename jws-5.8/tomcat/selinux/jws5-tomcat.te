policy_module(jws5-tomcat, 1.0.0)

########################################
#
# Declarations
#

## <desc>
## <p>
## Allow jws5_tomcat to read rpm database.
## </p>
## </desc>
gen_tunable(jws5_tomcat_read_rpm_db, false)

## <desc>
## <p>
## Allow jws5_tomcat to use executable memory and executable stack
## </p>
## </desc>
gen_tunable(jws5_tomcat_use_execmem, false)

## <desc>
## <p>
## Allow jws5_tomcat to connect to databases over the network.
## </p>
## </desc>
gen_tunable(jws5_tomcat_can_network_connect_db, false)

attribute jws5_tomcat_domain;

jws5_tomcat_domain_template(jws5_tomcat)

# Required for JWS zip distribution
gen_require(`
        role unconfined_r;
        type unconfined_t;
')
role unconfined_r types { jws5_tomcat_exec_t jws5_tomcat_t };
domtrans_pattern(unconfined_t, jws5_tomcat_exec_t, jws5_tomcat_t)
allow jws5_tomcat_t jws5_tomcat_exec_t:dir { search getattr };
# End Required block for zip distro

# TODO: Remove two lines (map permissions) after rhel-6 is EOL and uncomment TODOs in tomcat.if
allow jws5_tomcat_t jws5_tomcat_var_lib_t:file map;
allow jws5_tomcat_t jws5_tomcat_tmp_t:file map;
allow jws5_tomcat_t tmp_t:file map;

type jws5_tomcat_unit_file_t;
systemd_unit_file(jws5_tomcat_unit_file_t)

#######################################
#
# jws5_tomcat local policy
#

allow jws5_tomcat_t self:capability setgid;

allow jws5_tomcat_t self:process execmem;
allow jws5_tomcat_t self:process { signal signull };

allow jws5_tomcat_t self:tcp_socket { accept listen };

auth_use_nsswitch(jws5_tomcat_t)

# Temporary fix, while missing SELinux policies for HSM
init_stream_connect_script(jws5_tomcat_t)

########################################
#
# jws5_tomcat domain local policy
#

allow jws5_tomcat_t self:capability { setuid kill };

allow jws5_tomcat_t self:process { execmem setcap setsched signal signull };

allow jws5_tomcat_t self:tcp_socket { accept listen };
allow jws5_tomcat_domain self:fifo_file rw_fifo_file_perms;
allow jws5_tomcat_domain self:unix_stream_socket create_stream_socket_perms;

# we want to stay in a new jws5_tomcat domain if we call jws5_tomcat binary from a script
# initrc_t@jws5_tomcat_test_exec_t->jws5_tomcat_test_t@jws5_tomcat_exec_t->jws5_tomcat_test_t
can_exec(jws5_tomcat_domain, jws5_tomcat_exec_t)

kernel_read_network_state(jws5_tomcat_domain)
kernel_read_net_sysctls(jws5_tomcat_domain)
kernel_read_usermodehelper_state(jws5_tomcat_domain)

corecmd_exec_bin(jws5_tomcat_domain)
corecmd_exec_shell(jws5_tomcat_domain)

corenet_tcp_bind_generic_node(jws5_tomcat_domain)
corenet_udp_bind_generic_node(jws5_tomcat_domain)
corenet_tcp_bind_http_port(jws5_tomcat_domain)
corenet_tcp_bind_http_cache_port(jws5_tomcat_domain)
corenet_tcp_bind_mxi_port(jws5_tomcat_domain)
corenet_tcp_bind_bctp_port(jws5_tomcat_domain)
corenet_tcp_connect_http_port(jws5_tomcat_domain)
corenet_tcp_connect_ldap_port(jws5_tomcat_domain)
corenet_tcp_connect_mxi_port(jws5_tomcat_domain)
corenet_tcp_connect_http_cache_port(jws5_tomcat_domain)
corenet_tcp_connect_amqp_port(jws5_tomcat_domain)
corenet_tcp_connect_ibm_dt_2_port(jws5_tomcat_domain)
corenet_tcp_connect_unreserved_ports(jws5_tomcat_domain)
corenet_tcp_bind_jboss_management_port(jws5_tomcat_domain)
corenet_tcp_connect_smtp_port(jws5_tomcat_domain)

dev_dontaudit_append_rand(jws5_tomcat_domain)
dev_read_rand(jws5_tomcat_domain)
dev_read_urand(jws5_tomcat_domain)
dev_read_sysfs(jws5_tomcat_domain)

domain_use_interactive_fds(jws5_tomcat_domain)

libs_exec_ldconfig(jws5_tomcat_domain)

files_delete_usr_dirs(jws5_tomcat_domain)
files_manage_usr_files(jws5_tomcat_domain)

fs_getattr_all_fs(jws5_tomcat_domain)
fs_read_hugetlbfs_files(jws5_tomcat_domain)
fs_read_cgroup_files(jws5_tomcat_domain)

sysnet_dns_name_resolve(jws5_tomcat_domain)

optional_policy(`
    cobbler_read_lib_files(jws5_tomcat_domain)
')

optional_policy(`
	# needed by FreeIPA
	ldap_stream_connect(jws5_tomcat_domain)
	ldap_read_certs(jws5_tomcat_domain)
')

optional_policy(`
    mta_send_mail(jws5_tomcat_domain)
')

optional_policy(`
	jws5_tomcat_search_lib(jws5_tomcat_domain)
')

tunable_policy(`jws5_tomcat_read_rpm_db',`
    rpm_exec(jws5_tomcat_domain)
    rpm_read_db(jws5_tomcat_domain)
')

tunable_policy(`jws5_tomcat_can_network_connect_db',`
	corenet_tcp_connect_gds_db_port(jws5_tomcat_domain)
	corenet_tcp_connect_mssql_port(jws5_tomcat_domain)
	corenet_tcp_connect_mongod_port(jws5_tomcat_domain)
	corenet_sendrecv_mssql_client_packets(jws5_tomcat_domain)
	corenet_tcp_connect_oracle_port(jws5_tomcat_domain)
	corenet_sendrecv_oracle_client_packets(jws5_tomcat_domain)
    corenet_tcp_connect_postgresql_port(jws5_tomcat_domain)
    corenet_tcp_connect_mysqld_port(jws5_tomcat_domain)
')

tunable_policy(`jws5_tomcat_use_execmem',`
	allow jws5_tomcat_domain self:process { execmem execstack };
')

# Additional permissions not included in system policy
require {
        type jws5_tomcat_var_run_t;
        type tmp_t;
        type jws5_tomcat_tmp_t;
        type proc_t;
        type jws5_tomcat_t;
        type locale_t;
        class file { unlink create write getattr read open };
        class dir { write search getattr read open add_name remove_name create };
}

allow jws5_tomcat_t jws5_tomcat_tmp_t:dir { read getattr open };

allow jws5_tomcat_t jws5_tomcat_var_run_t:file { getattr write open };
allow jws5_tomcat_t locale_t:dir { search read getattr open };
allow jws5_tomcat_t locale_t:file { read getattr open };
allow jws5_tomcat_t proc_t:file { read open getattr };

allow jws5_tomcat_t tmp_t:dir { write read add_name remove_name create };
allow jws5_tomcat_t tmp_t:file { unlink write create open };
